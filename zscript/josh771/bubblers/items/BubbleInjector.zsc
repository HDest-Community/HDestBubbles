class Bubble_Injector : Bubble_Weapon
{
    static clearscope int GetInjectorSprite(readonly <Actor> injector)
    {
        let spriteMap    = HDestBubbleHandler.Get().injectorSprites;
        let spriteMapKey = injector.GetClassName();
        let spriteString = spriteMap.At(spriteMapKey);

        if (spriteString == "")
        {
            Array<State> seenStates;
            for (State st = injector.spawnState;
                st && seenStates.Find(st) == seenStates.Size();
                st = st.NextState)
            {
                seenStates.Push(st);

                if (st.sprite > 0)
                {
                    spriteMap.Insert(spriteMapKey, "" .. st.sprite);
                    return st.sprite;
                }
            }
        }

        return spriteString.ToInt();
    }

    default
    {
        Bubble_Weapon.weaponClass "PortableStimpack";
    }

    states
    {
        Spawn:
            TNT1 A 1
            {
                let injector = PortableStimpack(target.player.ReadyWeapon);

                switch (injector.GetClassName()) {
                    case 'SecondBlood':
                        CopySprite('PBLDA0', injector.scale);
                        break;
                    default:
                        if (injector.spentinjecttype) {
                            sprite = GetInjectorSprite(GetDefaultByType(injector.spentinjecttype));
                            scale = injector.scale;
                        }
                        break;
                }

                LowerIfAttackHeld(7., 7.);
            }
            Wait;
    }
}
